# -*- coding: utf-8 -*-
"""Linear regression with one variable.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1u3A7904tteT8aOBNhnJo-0VcB1xfx1Y8
"""

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
# %matplotlib inline

New_cols=['year','per_capital_income_US$']
df=pd.read_csv('/content/Linear Regression with single variable/Canada.csv',  header=None, names=new_cols, skiprows=1)
#df=pd.read_table('http://bit.ly/chiporder')
df.head()

df.info()

df.isnull().sum()

"""**Plotting of Data for better overview Text fett markieren**"""

plt.scatter(df.year,df['per_capital_income_US$'],color='blue',marker='+')

"""**Define of independent variable (X) and depend variable (y)**"""

X=df['year'].values

y=df['per_capital_income_US$'].values

"""**Reshape (Only by single variable regression??)**"""

X=X.reshape(-1,1)
y=y.reshape(-1,1)

"""**Define of regression model**"""

reg=LinearRegression()

"""**Fitting the model to the data**"""

reg.fit(X,y)

"""**Compute predictions over the prediction space (range) --> if necassery**"""

Range=np.linspace(X.min(),X.max()).reshape(-1,1)

"""**Calculate the prediction h = theta0 + theta1 * X**"""

h=reg.predict(Range)

"""**Calculate of R2**"""

print(reg.score(X,y))

"""**Plotting of regression**"""

plt.scatter(X,y)
plt.plot(Range,h,color='red',linewidth=3)
plt.show()

